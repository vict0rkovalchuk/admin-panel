{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","state","filteredHeroes","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","catch","id","console","log","deleteHero","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","setName","text","setText","setElement","filters","filtersLoadingStatus","content","onInputChange","e","target","value","loader","error","item","i","unshift","onSubmit","preventDefault","hero","newHero","uuidv4","JSON","stringify","htmlFor","onChange","required","placeholder","height","HeroesFilters","activeFilter","active","App","initialState","heroes","reducer","action","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c1d5f09.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case 'fire':\n      elementClassName = 'bg-danger bg-gradient';\n      break;\n    case 'water':\n      elementClassName = 'bg-primary bg-gradient';\n      break;\n    case 'wind':\n      elementClassName = 'bg-success bg-gradient';\n      break;\n    case 'earth':\n      elementClassName = 'bg-secondary bg-gradient';\n      break;\n    default:\n      elementClassName = 'bg-warning bg-gradient';\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"https://snworksceo.imgix.net/dtc/3f037af6-87ce-4a37-bb37-55b48029727d.sized-1000x1000.jpg?w=1000\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: 'cover' }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span\n        onClick={onDelete}\n        className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError,\n  deleteHero\n} from '../../actions';\nimport HeroesListItem from '../heroesListItem/HeroesListItem';\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n  const { filteredHeroes, heroesLoadingStatus } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(heroesFetching());\n    // request('http://localhost:3001/heroes')\n    request(\n      'https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes'\n    )\n      .then(data => dispatch(heroesFetched(data)))\n      .catch(() => dispatch(heroesFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    id => {\n      // request(`http://localhost:3001/heroes/${id}`, 'DELETE')\n      request(\n        `https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes/${id}`,\n        'DELETE'\n      )\n        .then(data => console.log(data, 'Deleted'))\n        .then(dispatch(deleteHero(id)))\n        .catch(err => console.log(err));\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === 'loading') {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === 'error') {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderHeroesList = arr => {\n    if (arr.length === 0) {\n      return (\n        <CSSTransition timeout={0} classNames=\"csstransition\">\n          <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        </CSSTransition>\n      );\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <CSSTransition key={id} timeout={500} classNames=\"csstransition\">\n          <HeroesListItem key={id} {...props} onDelete={() => onDelete(id)} />\n        </CSSTransition>\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n  return <TransitionGroup component=\"ul\">{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","export const heroesFetching = () => {\n  return {\n    type: 'HEROES_FETCHING'\n  };\n};\n\nexport const heroesFetched = heroes => {\n  return {\n    type: 'HEROES_FETCHED',\n    payload: heroes\n  };\n};\n\nexport const heroesFetchingError = () => {\n  return {\n    type: 'HEROES_FETCHING_ERROR'\n  };\n};\n\nexport const deleteHero = id => {\n  return {\n    type: 'DELETE_HERO',\n    payload: id\n  };\n};\n\nexport const addHero = hero => {\n  return {\n    type: 'ADD_HERO',\n    payload: hero\n  };\n};\n\nexport const filtersFetching = () => {\n  return {\n    type: 'FILTERS_FETCHING'\n  };\n};\n\nexport const filtersFetched = heroes => {\n  return {\n    type: 'FILTERS_FETCHED',\n    payload: heroes\n  };\n};\n\nexport const filtersFetchingError = () => {\n  return {\n    type: 'FILTERS_FETCHING_ERROR'\n  };\n};\n\nexport const activeFilterChanged = filter => {\n  return {\n    type: 'ACTIVE_FILTER_CHANGED',\n    payload: filter\n  };\n};\n","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  filtersFetching,\n  filtersFetched,\n  filtersFetchingError\n} from '../../actions';\n\nimport { addHero } from '../../actions';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [element, setElement] = useState('');\n\n  const { filters, filtersLoadingStatus } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(filtersFetching());\n    // request('http://localhost:3001/filters')\n    request(\n      'https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/filters'\n    )\n      .then(data => dispatch(filtersFetched(data)))\n      .catch(() => dispatch(filtersFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'text':\n        setText(e.target.value);\n        break;\n      case 'element':\n        setElement(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newHero = {\n      id: uuidv4(),\n      name,\n      description: text,\n      element\n    };\n    // request(`http://localhost:3001/heroes`, 'POST', JSON.stringify(newHero))\n    request(\n      `https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes`,\n      'POST',\n      JSON.stringify(newHero)\n    )\n      .then(data => console.log(data, 'Posted'))\n      .then(dispatch(addHero(newHero)))\n      .catch(err => console.log(err));\n    setName('');\n    setText('');\n    setElement('');\n  };\n\n  //   const loader = filtersLoadingStatus === 'loading' ? <Spinner /> : null;\n  const loader =\n    filtersLoadingStatus === 'loading' ? (\n      <option>Загрузка элементов</option>\n    ) : null;\n  const error =\n    filtersLoadingStatus === 'error' ? <option>Ошибка загрузки</option> : null;\n\n  let content;\n  if (filters && filters.length > 0) {\n    content = filters.map((item, i) => {\n      if (item.value === 'all') return;\n\n      return (\n        <option key={i} value={item.value}>\n          {item.name}\n        </option>\n      );\n    });\n    content.unshift(<option value=\"\">Я владею элементом...</option>);\n  }\n\n  return (\n    <form onSubmit={onSubmit} className=\"border p-4 shadow-lg rounded\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          Имя нового героя\n        </label>\n        <input\n          value={name}\n          onChange={onInputChange}\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"Как меня зовут?\"\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Описание\n        </label>\n        <textarea\n          value={text}\n          onChange={onInputChange}\n          required\n          name=\"text\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"Что я умею?\"\n          style={{ height: '130px' }}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Выбрать элемент героя\n        </label>\n        <select\n          value={element}\n          onChange={onInputChange}\n          required\n          className=\"form-select\"\n          id=\"element\"\n          name=\"element\"\n        >\n          {loader}\n          {error}\n          {content}\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Создать\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { activeFilterChanged } from '../../actions';\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n  const { filters, activeFilter } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">\n          {filters.map((item, i) => (\n            <button\n              onClick={() => dispatch(activeFilterChanged(item.value))}\n              key={i}\n              //   className={`btn ${item.classNames}`}\n              className={classNames('btn', `${item.classNames}`, {\n                active: item.value === activeFilter\n              })}\n            >\n              {item.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n  heroes: [],\n  filteredHeroes: [],\n  heroesLoadingStatus: 'idle',\n  filtersLoadingStatus: 'idle',\n  filters: [],\n  activeFilter: 'all'\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'HEROES_FETCHING':\n      return {\n        ...state,\n        heroesLoadingStatus: 'loading'\n      };\n    case 'HEROES_FETCHED':\n      return {\n        ...state,\n        heroes: action.payload,\n        heroesLoadingStatus: 'idle',\n        filteredHeroes:\n          state.activeFilter === 'all'\n            ? action.payload\n            : action.payload.filter(item => item.element === state.activeFilter)\n      };\n    case 'HEROES_FETCHING_ERROR':\n      return {\n        ...state,\n        heroesLoadingStatus: 'error'\n      };\n    case 'DELETE_HERO':\n      return {\n        ...state,\n        heroes: state.heroes.filter(item => item.id !== action.payload),\n        filteredHeroes:\n          state.activeFilter === 'all'\n            ? state.heroes.filter(item => item.id !== action.payload)\n            : state.heroes\n                .filter(item => item.id !== action.payload)\n                .filter(item => item.element === state.activeFilter)\n      };\n    case 'ADD_HERO':\n      return {\n        ...state,\n        heroes: [...state.heroes, action.payload],\n        filteredHeroes:\n          state.activeFilter === 'all'\n            ? [...state.heroes, action.payload]\n            : [...state.heroes, action.payload].filter(\n                item => item.element === state.activeFilter\n              )\n      };\n    case 'FILTERS_FETCHING':\n      return {\n        ...state,\n        filtersLoadingStatus: 'loading'\n      };\n    case 'FILTERS_FETCHED':\n      return {\n        ...state,\n        filters: action.payload,\n        filtersLoadingStatus: 'idle'\n      };\n    case 'FILTERS_FETCHING_ERROR':\n      return {\n        ...state,\n        filtersLoadingStatus: 'error'\n      };\n    case 'ACTIVE_FILTER_CHANGED':\n      return {\n        ...state,\n        activeFilter: action.payload,\n        filteredHeroes:\n          action.payload === 'all'\n            ? state.heroes\n            : state.heroes.filter(item => item.element === action.payload)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}