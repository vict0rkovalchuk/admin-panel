{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","state","filters","activeFilter","heroes","filter","item","filteredHeroes","useSelector","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","catch","id","console","log","deleteHero","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","setName","text","setText","setElement","filtersLoadingStatus","content","onInputChange","e","target","value","loader","error","unshift","onSubmit","preventDefault","hero","newHero","uuidv4","JSON","stringify","htmlFor","onChange","required","placeholder","height","HeroesFilters","active","App","initialState","action","store","createStore","combineReducers","compose","oldDispatch","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed1a2fa1.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case 'fire':\n      elementClassName = 'bg-danger bg-gradient';\n      break;\n    case 'water':\n      elementClassName = 'bg-primary bg-gradient';\n      break;\n    case 'wind':\n      elementClassName = 'bg-success bg-gradient';\n      break;\n    case 'earth':\n      elementClassName = 'bg-secondary bg-gradient';\n      break;\n    default:\n      elementClassName = 'bg-warning bg-gradient';\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"https://snworksceo.imgix.net/dtc/3f037af6-87ce-4a37-bb37-55b48029727d.sized-1000x1000.jpg?w=1000\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: 'cover' }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span\n        onClick={onDelete}\n        className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { createSelector } from 'reselect';\n\nimport {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError,\n  deleteHero\n} from '../../actions';\nimport HeroesListItem from '../heroesListItem/HeroesListItem';\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n  const filteredHeroesSelector = createSelector(\n    state => state.filters.activeFilter,\n    state => state.heroes.heroes,\n    (filter, heroes) => {\n      if (filter === 'all') {\n        return heroes;\n      } else {\n        return heroes.filter(item => item.element === filter);\n      }\n    }\n  );\n\n  const filteredHeroes = useSelector(filteredHeroesSelector);\n  const heroesLoadingStatus = useSelector(\n    state => state.heroes.heroesLoadingStatus\n  );\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    // dispatch(heroesFetching());\n    dispatch('HEROES_FETCHING');\n    // request('http://localhost:3001/heroes')\n    request(\n      'https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes'\n    )\n      .then(data => dispatch(heroesFetched(data)))\n      .catch(() => dispatch(heroesFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    id => {\n      // request(`http://localhost:3001/heroes/${id}`, 'DELETE')\n      request(\n        `https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes/${id}`,\n        'DELETE'\n      )\n        .then(data => console.log(data, 'Deleted'))\n        .then(dispatch(deleteHero(id)))\n        .catch(err => console.log(err));\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === 'loading') {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === 'error') {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderHeroesList = arr => {\n    if (arr.length === 0) {\n      return (\n        <CSSTransition timeout={0} classNames=\"csstransition\">\n          <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        </CSSTransition>\n      );\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <CSSTransition key={id} timeout={500} classNames=\"csstransition\">\n          <HeroesListItem key={id} {...props} onDelete={() => onDelete(id)} />\n        </CSSTransition>\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n  return <TransitionGroup component=\"ul\">{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","export const heroesFetching = () => {\n  return {\n    type: 'HEROES_FETCHING'\n  };\n};\n\nexport const heroesFetched = heroes => {\n  return {\n    type: 'HEROES_FETCHED',\n    payload: heroes\n  };\n};\n\nexport const heroesFetchingError = () => {\n  return {\n    type: 'HEROES_FETCHING_ERROR'\n  };\n};\n\nexport const deleteHero = id => {\n  return {\n    type: 'DELETE_HERO',\n    payload: id\n  };\n};\n\nexport const addHero = hero => {\n  return {\n    type: 'ADD_HERO',\n    payload: hero\n  };\n};\n\nexport const filtersFetching = () => {\n  return {\n    type: 'FILTERS_FETCHING'\n  };\n};\n\nexport const filtersFetched = heroes => {\n  return {\n    type: 'FILTERS_FETCHED',\n    payload: heroes\n  };\n};\n\nexport const filtersFetchingError = () => {\n  return {\n    type: 'FILTERS_FETCHING_ERROR'\n  };\n};\n\nexport const activeFilterChanged = filter => {\n  return {\n    type: 'ACTIVE_FILTER_CHANGED',\n    payload: filter\n  };\n};\n","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  filtersFetching,\n  filtersFetched,\n  filtersFetchingError\n} from '../../actions';\n\nimport { addHero } from '../../actions';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [element, setElement] = useState('');\n\n  const { filters, filtersLoadingStatus } = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(filtersFetching());\n    // request('http://localhost:3001/filters')\n    request(\n      'https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/filters'\n    )\n      .then(data => dispatch(filtersFetched(data)))\n      .catch(() => dispatch(filtersFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'text':\n        setText(e.target.value);\n        break;\n      case 'element':\n        setElement(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newHero = {\n      id: uuidv4(),\n      name,\n      description: text,\n      element\n    };\n    // request(`http://localhost:3001/heroes`, 'POST', JSON.stringify(newHero))\n    request(\n      `https://my-json-server.typicode.com/vict0rkovalchuk/admin-panel/heroes`,\n      'POST',\n      JSON.stringify(newHero)\n    )\n      .then(data => console.log(data, 'Posted'))\n      .then(dispatch(addHero(newHero)))\n      .catch(err => console.log(err));\n    setName('');\n    setText('');\n    setElement('');\n  };\n\n  const loader =\n    filtersLoadingStatus === 'loading' ? (\n      <option>Загрузка элементов...</option>\n    ) : null;\n  const error =\n    filtersLoadingStatus === 'error' ? <option>Ошибка загрузки</option> : null;\n\n  let content;\n  if (filters && filters.length > 0) {\n    content = filters.map(({ value, name }) => {\n      if (value !== 'all') {\n        return (\n          <option key={value} value={value}>\n            {name}\n          </option>\n        );\n      }\n      return null;\n    });\n    content.unshift(\n      <option key=\"\" value=\"\">\n        Я владею элементом...\n      </option>\n    );\n  }\n\n  return (\n    <form onSubmit={onSubmit} className=\"border p-4 shadow-lg rounded\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          Имя нового героя\n        </label>\n        <input\n          value={name}\n          onChange={onInputChange}\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"Как меня зовут?\"\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Описание\n        </label>\n        <textarea\n          value={text}\n          onChange={onInputChange}\n          required\n          name=\"text\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"Что я умею?\"\n          style={{ height: '130px' }}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Выбрать элемент героя\n        </label>\n        <select\n          value={element}\n          onChange={onInputChange}\n          required\n          className=\"form-select\"\n          id=\"element\"\n          name=\"element\"\n        >\n          {loader}\n          {error}\n          {content}\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Создать\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { activeFilterChanged } from '../../actions';\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n  const { filters, activeFilter, filtersLoadingStatus } = useSelector(\n    state => state.filters\n  );\n  const dispatch = useDispatch();\n\n  const loader =\n    filtersLoadingStatus === 'loading' ? (\n      <div>Загрузка элементов...</div>\n    ) : null;\n  const error =\n    filtersLoadingStatus === 'error' ? <div>Ошибка загрузки</div> : null;\n  const content =\n    filtersLoadingStatus === 'idle'\n      ? filters.map(({ value, className, name }) => {\n          return (\n            <button\n              onClick={() => dispatch(activeFilterChanged(value))}\n              key={value}\n              className={classNames('btn', `${className}`, {\n                active: value === activeFilter\n              })}\n            >\n              {name}\n            </button>\n          );\n        })\n      : null;\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">\n          {loader}\n          {error}\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\r\n  heroes: [],\r\n  heroesLoadingStatus: 'idle'\r\n};\r\n\r\nconst heroes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HEROES_FETCHING':\r\n      return {\r\n        ...state,\r\n        heroesLoadingStatus: 'loading'\r\n      };\r\n    case 'HEROES_FETCHED':\r\n      return {\r\n        ...state,\r\n        heroes: action.payload,\r\n        heroesLoadingStatus: 'idle'\r\n      };\r\n    case 'HEROES_FETCHING_ERROR':\r\n      return {\r\n        ...state,\r\n        heroesLoadingStatus: 'error'\r\n      };\r\n    case 'DELETE_HERO':\r\n      return {\r\n        ...state,\r\n        heroes: state.heroes.filter(item => item.id !== action.payload)\r\n      };\r\n    case 'ADD_HERO':\r\n      return {\r\n        ...state,\r\n        heroes: [...state.heroes, action.payload]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default heroes;\r\n","const initialState = {\r\n  filtersLoadingStatus: 'idle',\r\n  filters: [],\r\n  activeFilter: 'all'\r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FILTERS_FETCHING':\r\n      return {\r\n        ...state,\r\n        filtersLoadingStatus: 'loading'\r\n      };\r\n    case 'FILTERS_FETCHED':\r\n      return {\r\n        ...state,\r\n        filters: action.payload,\r\n        filtersLoadingStatus: 'idle'\r\n      };\r\n    case 'FILTERS_FETCHING_ERROR':\r\n      return {\r\n        ...state,\r\n        filtersLoadingStatus: 'error'\r\n      };\r\n    case 'ACTIVE_FILTER_CHANGED':\r\n      return {\r\n        ...state,\r\n        activeFilter: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filters;\r\n","import { createStore, combineReducers, compose } from 'redux';\nimport heroes from '../reducers/heroes';\nimport filters from '../reducers/filters';\n\nconst enhancer =\n  createStore =>\n  (...args) => {\n    const store = createStore(...args);\n\n    const oldDispatch = store.dispatch;\n    store.dispatch = action => {\n      if (typeof action === 'string') {\n        return oldDispatch({\n          type: action\n        });\n      }\n      return oldDispatch(action);\n    };\n    return store;\n  };\n\nconst store = createStore(\n  combineReducers({ heroes, filters }),\n  compose(\n    enhancer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}